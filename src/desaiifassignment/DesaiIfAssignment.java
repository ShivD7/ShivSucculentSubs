/* Shiv Desai
 * April 16, 2024
 * Create a GUI that simulates an online order form for a restaurant. You can pick any restaurant you like, real or fake
 */


//RAZZLE DAZZLE - DATE OF PURCHASE IN RECEIPT AND IMAGE

package desaiifassignment;

//import necessary classes for formatting, output, random numbers, and the date for the receipt
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import java.util.Random;
import java.util.Calendar;
import java.util.Date;

public class DesaiIfAssignment extends javax.swing.JFrame {

    /**
     * Creates new form DesaiIfAssignment
     */
    public DesaiIfAssignment() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sizeBtnGroup = new javax.swing.ButtonGroup();
        breadBtnGroup = new javax.swing.ButtonGroup();
        cheeseBtnGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn6Inches = new javax.swing.JRadioButton();
        btnFootlong = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        btnWhite = new javax.swing.JRadioButton();
        btnWholeWheat = new javax.swing.JRadioButton();
        btnItalian = new javax.swing.JRadioButton();
        btnGluten = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        btnLettuce = new javax.swing.JCheckBox();
        btnTomato = new javax.swing.JCheckBox();
        btnSpinach = new javax.swing.JCheckBox();
        btnOnion = new javax.swing.JCheckBox();
        btnGOlives = new javax.swing.JCheckBox();
        btnBOlives = new javax.swing.JCheckBox();
        btnJalapeno = new javax.swing.JCheckBox();
        btnGreenPepper = new javax.swing.JCheckBox();
        btnChicken = new javax.swing.JCheckBox();
        btnSteak = new javax.swing.JCheckBox();
        btnHam = new javax.swing.JCheckBox();
        btnBacon = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        btnMayo = new javax.swing.JCheckBox();
        btnBBQ = new javax.swing.JCheckBox();
        btnMustard = new javax.swing.JCheckBox();
        btnHoneyMustard = new javax.swing.JCheckBox();
        btnHotSauce = new javax.swing.JCheckBox();
        btnSweetOnion = new javax.swing.JCheckBox();
        btnChipotle = new javax.swing.JCheckBox();
        btnGarlicAioli = new javax.swing.JCheckBox();
        btnRanch = new javax.swing.JCheckBox();
        btnSpicyMayo = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        amountChocoChunk = new javax.swing.JSpinner();
        amountDoubleChoco = new javax.swing.JSpinner();
        amountOatmealRaisin = new javax.swing.JSpinner();
        amountPeanutButter = new javax.swing.JSpinner();
        btnChocoChunk = new javax.swing.JCheckBox();
        btnDoubleChoco = new javax.swing.JCheckBox();
        btnOatmealRaisin = new javax.swing.JCheckBox();
        btnPeanutButter = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        numberOfSubs = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        btnCheeseWhite = new javax.swing.JRadioButton();
        btnMozzarella = new javax.swing.JRadioButton();
        btnFreshCheddar = new javax.swing.JRadioButton();
        btnHabaneroJack = new javax.swing.JRadioButton();
        btnBlueCheese = new javax.swing.JRadioButton();
        btnProcessedCheddar = new javax.swing.JRadioButton();
        btnOrder = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        receipt = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 70)); // NOI18N
        jLabel1.setText("Shiv's Succulent Subs ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        sizeBtnGroup.add(btn6Inches);
        btn6Inches.setSelected(true);
        btn6Inches.setText("6 inches");
        btn6Inches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6InchesActionPerformed(evt);
            }
        });

        sizeBtnGroup.add(btnFootlong);
        btnFootlong.setText("Footlong");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn6Inches)
                    .addComponent(btnFootlong))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(btn6Inches)
                .addGap(18, 18, 18)
                .addComponent(btnFootlong)
                .addGap(21, 21, 21))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bread", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        breadBtnGroup.add(btnWhite);
        btnWhite.setSelected(true);
        btnWhite.setText("White");

        breadBtnGroup.add(btnWholeWheat);
        btnWholeWheat.setText("Whole Wheat");

        breadBtnGroup.add(btnItalian);
        btnItalian.setText("Italian Herbs and Cheese");

        breadBtnGroup.add(btnGluten);
        btnGluten.setText("Gluten-Free");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnWholeWheat)
                    .addComponent(btnWhite)
                    .addComponent(btnItalian)
                    .addComponent(btnGluten))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnWhite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnWholeWheat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnItalian)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGluten))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Toppings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        btnLettuce.setText("Lettuce");

        btnTomato.setText("Tomato");

        btnSpinach.setText("Spinach");

        btnOnion.setText("Onion");

        btnGOlives.setText("Green Olives");
        btnGOlives.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGOlivesActionPerformed(evt);
            }
        });

        btnBOlives.setText("Black Olives");

        btnJalapeno.setText("Jalape√±o");

        btnGreenPepper.setText("Green Pepper");

        btnChicken.setText("Chicken");

        btnSteak.setText("Steak");

        btnHam.setText("Ham");

        btnBacon.setText("Bacon");
        btnBacon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaconActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTomato)
                            .addComponent(btnLettuce))
                        .addGap(94, 94, 94)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnJalapeno)
                            .addComponent(btnGreenPepper)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGOlives, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBOlives, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSpinach)
                            .addComponent(btnOnion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSteak)
                            .addComponent(btnChicken)
                            .addComponent(btnHam)
                            .addComponent(btnBacon))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnJalapeno)
                    .addComponent(btnLettuce))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGreenPepper)
                    .addComponent(btnTomato))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChicken)
                    .addComponent(btnSpinach))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOnion)
                    .addComponent(btnSteak, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGOlives)
                    .addComponent(btnHam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBOlives)
                    .addComponent(btnBacon))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sauces", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        btnMayo.setText("Mayonaise");

        btnBBQ.setText("BBQ Sauce");

        btnMustard.setText("Mustard");

        btnHoneyMustard.setText("Honey Mustard");

        btnHotSauce.setText("Hot Sauce");

        btnSweetOnion.setText("Sweet Onion");

        btnChipotle.setText("Chipotle");

        btnGarlicAioli.setText("Garlic Aioli");

        btnRanch.setText("Ranch");

        btnSpicyMayo.setText("Spicy Mayo");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHotSauce)
                            .addComponent(btnHoneyMustard)
                            .addComponent(btnMustard))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRanch)
                            .addComponent(btnGarlicAioli)
                            .addComponent(btnSpicyMayo)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBBQ)
                            .addComponent(btnMayo))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnChipotle)
                            .addComponent(btnSweetOnion))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMayo)
                    .addComponent(btnSweetOnion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBBQ)
                    .addComponent(btnChipotle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMustard)
                    .addComponent(btnGarlicAioli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHoneyMustard)
                    .addComponent(btnRanch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHotSauce)
                    .addComponent(btnSpicyMayo)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cookies", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        amountChocoChunk.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        amountChocoChunk.setEnabled(false);
        amountChocoChunk.setRequestFocusEnabled(false);

        amountDoubleChoco.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        amountDoubleChoco.setEnabled(false);

        amountOatmealRaisin.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        amountOatmealRaisin.setEnabled(false);

        amountPeanutButter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        amountPeanutButter.setEnabled(false);

        btnChocoChunk.setText("Chocolate Chunk");
        btnChocoChunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChocoChunkActionPerformed(evt);
            }
        });

        btnDoubleChoco.setText("Double Choco");
        btnDoubleChoco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoubleChocoActionPerformed(evt);
            }
        });

        btnOatmealRaisin.setText("Oatmeal Raisin");
        btnOatmealRaisin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOatmealRaisinActionPerformed(evt);
            }
        });

        btnPeanutButter.setText("Peanut Butter");
        btnPeanutButter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeanutButterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDoubleChoco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnChocoChunk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPeanutButter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOatmealRaisin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amountChocoChunk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountPeanutButter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountOatmealRaisin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountDoubleChoco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnChocoChunk)
                    .addComponent(amountChocoChunk, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountDoubleChoco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoubleChoco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountOatmealRaisin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOatmealRaisin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPeanutButter)
                    .addComponent(amountPeanutButter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Number of Subs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        numberOfSubs.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        numberOfSubs.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(numberOfSubs, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(numberOfSubs, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cheeses", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        cheeseBtnGroup.add(btnCheeseWhite);
        btnCheeseWhite.setSelected(true);
        btnCheeseWhite.setText("White");

        cheeseBtnGroup.add(btnMozzarella);
        btnMozzarella.setText("Mozzarella");

        cheeseBtnGroup.add(btnFreshCheddar);
        btnFreshCheddar.setText("Fresh Cheddar");

        cheeseBtnGroup.add(btnHabaneroJack);
        btnHabaneroJack.setText("Habanero Jack");

        cheeseBtnGroup.add(btnBlueCheese);
        btnBlueCheese.setText("Blue");

        cheeseBtnGroup.add(btnProcessedCheddar);
        btnProcessedCheddar.setText("Processed Cheddar");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnFreshCheddar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCheeseWhite, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMozzarella, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnProcessedCheddar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBlueCheese, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHabaneroJack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheeseWhite)
                    .addComponent(btnHabaneroJack))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMozzarella)
                    .addComponent(btnBlueCheese))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFreshCheddar)
                    .addComponent(btnProcessedCheddar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnOrder.setBackground(new java.awt.Color(0, 0, 0));
        btnOrder.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        btnOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnOrder.setText("Order");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(0, 0, 0));
        btnReset.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        receipt.setColumns(20);
        receipt.setRows(5);
        jScrollPane1.setViewportView(receipt);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/desaiifassignment/sub.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(609, 609, 609)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn6InchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6InchesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn6InchesActionPerformed

    private void btnGOlivesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGOlivesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGOlivesActionPerformed

    private void btnBaconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaconActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBaconActionPerformed
    //order button is clicked
    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        //create a format to format money in the receipt
        DecimalFormat money = new DecimalFormat("$#,##0.00"); 
        //create a string that will store the toppings the customer has selected so it can be printed out in the receipt
        String toppingsSelected = "Toppings Selected: ";
        //create instances of both the calendar and random classes which will then be used for date and random numbers
        Random r = new Random();
        Calendar calendar = Calendar.getInstance();

        // Get the current date object
        Date currentDate = calendar.getTime();
        //create a random number
        int rNum = r.nextInt(100) + 1;
        //create variable to store base price
        double basePrice;
        //create variable to store the discount rate
        double discountRate = 0;
        //create a variable that will track the price of the toppings the user selected
        double toppingPrice = 0;
        //if the random number is divisible by 10, then offer the user a 10% discount
        if (rNum % 10 == 0){
            //set discount rate to 10%, tell user they earned the discount
            discountRate = 0.1;
            JOptionPane.showMessageDialog(null, "Congrats! You won a 10% Discount", "WINNER!", 1);
        }
        //check if siez selected is 6 inches
        if (btn6Inches.isSelected()){
            //set base price to 3
            basePrice = 3;
            //add size and base price to receipt
            receipt.setText("Size Selected: 6 Inches\nBase Price: " + money.format(basePrice));
        }else{//must be footlong
            //set base price to 6
            basePrice = 6;
            //add size and base price to receipt
            receipt.setText("Size Selected: Footlong\nBase Price: " + money.format(basePrice));
        }
        //create a variable that will track the total cost of the order
        double price;
        //price will start at base price
        price = basePrice;
        if (btnWholeWheat.isSelected()){//check if bread selected is whole wheat
            //add one to the price 
            price += 1;
            //add type and cost of bread to receipt
            receipt.setText(receipt.getText() + "\nBread Selected: Whole Wheat Bread\nPrice Of Bread: " + money.format(1));  
        }else if (btnWhite.isSelected()){//check if bread selected is white
            //add one to the price 
            price += 1;
            //add type and cost of bread to receipt
            receipt.setText(receipt.getText() + "\nBread Selected: White Bread\nPrice Of Bread: " + money.format(1));              
        }else if (btnItalian.isSelected()){//check if bread selected is Italian Herbs and Cheese
            //add 2 to the price
            price += 2;
            //add type and cost of bread to receipt
            receipt.setText(receipt.getText() + "\nBread Selected: Italian Herbs and Cheese\nPrice Of Bread: " + money.format(2));  
        }else{//bread type must be gluten free
            //add 2 to the price
            price += 2;
            //add type and cost of bread to receipt
            receipt.setText(receipt.getText() + "\nBread Selected: Italian Herbs and Cheese\nPrice Of Bread: " + money.format(2));
        }
        
        //since toppings are check boxes, we must check all the seperate buttons and see if they are selected. If they are selected we add the cost of the topping to the total cost of all of the toppings, and add the topping to the list of toppings ordered
        if (btnLettuce.isSelected()){
           toppingsSelected += "Lettuce  ";
           price += 0.25; 
           toppingPrice += 0.25; 
        }if (btnTomato.isSelected()){
           toppingsSelected += "Tomato  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnSpinach.isSelected()){
           toppingsSelected += "Spinach  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnOnion.isSelected()){
           toppingsSelected += "Onion  "; 
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnGOlives.isSelected()){
           toppingsSelected += "Green Olives  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnBOlives.isSelected()){
           toppingsSelected += "Black Olives  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnJalapeno.isSelected()){
           toppingsSelected += "Jalape√±o  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnGreenPepper.isSelected()){
           toppingsSelected += "Green Pepper  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnChicken.isSelected()){
           toppingsSelected += "Chicken  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnSteak.isSelected()){
           toppingsSelected += "Steak  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnHam.isSelected()){
           toppingsSelected += "Ham  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }if (btnBacon.isSelected()){
           toppingsSelected += "Bacon  ";
           price += 0.25;
           toppingPrice += 0.25; 
        }
        
        //add the cost of all of the toppings as well as the toppings selected to the receipt
        receipt.setText(receipt.getText() + "\n" + toppingsSelected + "\nPrice of Toppings: " + money.format(toppingPrice) + "\nPrice of Cheese: " + money.format(0.5));
        //create string that stores what type of cheese was selected
        String cheeseSelected = "Cheese Selected: ";
        if (btnCheeseWhite.isSelected()){//check if cheese selected is white
            cheeseSelected += "White";
        }else if (btnMozzarella.isSelected()){//check if cheese selected is mozzarella
            cheeseSelected += "Mozzarella";
        }else if (btnFreshCheddar.isSelected()){//check if cheese selected is fresh cheddar
            cheeseSelected += "Fresh Cheddar";
        }else if (btnHabaneroJack.isSelected()){//check if cheese selected is habanero jack
            cheeseSelected += "Habanero Jack";
        }else if (btnBlueCheese.isSelected()){//check if cheese selected is blue cheese
            cheeseSelected += "Blue";
        }else{//cheese must be processed cheddar
            cheeseSelected += "Processed Cheddar";
        }
        //add cost of cheese to price as all cheeses cost the same
        price += 0.5;
        
        //add cheese selected and cost of cheese to receipt
        receipt.setText(receipt.getText() + "\n" + cheeseSelected);
        receipt.setText(receipt.getText() + "\nCost of Cheese: " + money.format(0.5));
        
        //create variable to track the cost of all the sauces selected
        double saucesCost = 0;
        //create string that tracks all sauces selected
        String saucesSelected = "Sauces Selected: ";
        //since causes are in a checkbox, we must check all the boxes to see if they are selected and increment the price as well as add to the list of sauces. We cannot really utilize parallel structure that well.
        if (btnMayo.isSelected()){
           price += 0.5; 
           saucesCost += 0.5;
           saucesSelected += "Mayo  ";
        }if (btnBBQ.isSelected()){
           price += 0.5;
           saucesCost += 0.5;
           saucesSelected += "BBQ Sauce  ";
        }if (btnMustard.isSelected()){
           price += 0.5;
           saucesCost += 0.5;
           saucesSelected += "Mustard  ";
        }if (btnHoneyMustard.isSelected()){
           price += 0.5;
           saucesCost += 0.5;
           saucesSelected += "Honey Mustard  ";
        }if (btnHotSauce.isSelected()){
           saucesSelected += "Hot Sauce  ";
           price += 0.5;
           saucesCost += 0.5;
        }if (btnSweetOnion.isSelected()){
           saucesCost += 0.5;
           saucesSelected += "Sweet Onion  ";
           price += 0.5;
        }if (btnChipotle.isSelected()){
           saucesSelected += "Chipotle  ";
           saucesCost += 0.5;
           price += 0.5;
        }if (btnGarlicAioli.isSelected()){
           saucesSelected += "Garlic Aioli  ";
           saucesCost += 0.5;
           price += 0.5;
        }if (btnRanch.isSelected()){
           saucesSelected += "Ranch  ";
           saucesCost += 0.5;
           price += 0.5;
        }if (btnSpicyMayo.isSelected()){
           saucesSelected += "Spicy Mayo  ";
           saucesCost += 0.5;
           price += 0.5;
        }
        
        
        //add sauces selected and cost of all of the sauces to receipt
        receipt.setText(receipt.getText() + "\n" + saucesSelected + "\nCost of Sauces: " + money.format(saucesCost));
        
        
        //get number of subs ordered by user
        int subs = (int)(numberOfSubs.getValue());
        
        //add the number of subs ordered to the receipt
        receipt.setText(receipt.getText() + "\nNumber of subs: " + subs);
        //multiply price of 1 sub by number of subs ordered
        price *= subs;
        
        //create variable to track the total cost of all of the cookies ordered
        double cookieCost = 0;
        
        //once again, since these are checkboxes, we cannot implement parallel structure and must go through each
        //individual check box and get the number of cookies ordered, calculate the cost of the cookies, and add this to the receipt
        if (btnChocoChunk.isSelected()){
            int cookies = (int)(amountChocoChunk.getValue());
            price += 1.25 * cookies;
            cookieCost += 1.25 * cookies;
            receipt.setText(receipt.getText() + "\nNumber of Chocolate Chunk Cookies: " + cookies);
        }if (btnDoubleChoco.isSelected()){
            int cookies = (int)(amountDoubleChoco.getValue());
            price += 1.25 * cookies;
            cookieCost += 1.25 * cookies;
            receipt.setText(receipt.getText() + "\nNumber of Double Choco Cookies: " + cookies);
        }if (btnOatmealRaisin.isSelected()){
            int cookies = (int)(amountOatmealRaisin.getValue());
            price += 1.25 * cookies;
            cookieCost += 1.25 * cookies;
            receipt.setText(receipt.getText() + "\nNumber of Oatmeal Raisin Cookies: " + cookies);
        }if (btnPeanutButter.isSelected()){ 
           int cookies = (int)(amountPeanutButter.getValue());
            price += 1.25 * cookies;
            cookieCost += 1.25 * cookies;
            receipt.setText(receipt.getText() + "\nNumber of Peanut Butter Cookies: " + cookies);
        }
        //add total cost of cookies to receipt
        receipt.setText(receipt.getText() + "\nTotal cost of cookies: " + money.format(cookieCost));
        
        //calculate discount amount using discount rate and price
        double discountAmount = price * discountRate;
        
        //add price before discount and discount amount to receipt
        receipt.setText(receipt.getText() + "\nPrice: " + money.format(price) + "\nDiscount Amount: " + money.format(discountAmount));
        //calculate final cost with discount
        price = price - discountAmount;
        //add this final cost to receipt
        receipt.setText(receipt.getText() + "\nFinal Price: " + money.format(price));
        //add date to receipt
        receipt.setText(receipt.getText() + "\n\nDate of Purchase: " + currentDate);
    }//GEN-LAST:event_btnOrderActionPerformed
    //reset button is clicked
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        //clear all selected items in button groups
        sizeBtnGroup.clearSelection();
        breadBtnGroup.clearSelection();
        cheeseBtnGroup.clearSelection();
        //make default selection for size as 6 inches
        btn6Inches.setSelected(rootPaneCheckingEnabled);
        
        //go through each individual check box for toppings, reset them to unselected if they are selected
        if (btnLettuce.isSelected()){
           btnLettuce.setSelected(false);
        }if (btnTomato.isSelected()){
           btnTomato.setSelected(false);
        }if (btnSpinach.isSelected()){
           btnSpinach.setSelected(false);
        }if (btnOnion.isSelected()){
           btnOnion.setSelected(false);
        }if (btnGOlives.isSelected()){
           btnGOlives.setSelected(false);
        }if (btnBOlives.isSelected()){
           btnBOlives.setSelected(false);
        }if (btnJalapeno.isSelected()){
           btnJalapeno.setSelected(false);
        }if (btnGreenPepper.isSelected()){
           btnGreenPepper.setSelected(false);
        }if (btnChicken.isSelected()){
           btnChicken.setSelected(false);
        }if (btnSteak.isSelected()){
          btnSteak.setSelected(false);
        }if (btnHam.isSelected()){
           btnHam.setSelected(false);
        }if (btnBacon.isSelected()){
           btnBacon.setSelected(false);
        }
        
        //go through each individual checkbox for sauces, reset them if they are selected
        if (btnMayo.isSelected()){
           btnMayo.setSelected(false);
        }if (btnBBQ.isSelected()){
           btnBBQ.setSelected(false);
        }if (btnMustard.isSelected()){
           btnMustard.setSelected(false);
        }if (btnHoneyMustard.isSelected()){
           btnHoneyMustard.setSelected(false);
        }if (btnHotSauce.isSelected()){
           btnHotSauce.setSelected(false);
        }if (btnSweetOnion.isSelected()){
            btnSweetOnion.setSelected(false);
        }if (btnChipotle.isSelected()){
            btnChipotle.setSelected(false);
        }if (btnGarlicAioli.isSelected()){
            btnGarlicAioli.setSelected(false);
        }if (btnRanch.isSelected()){
            btnRanch.setSelected(false);
        }if (btnSpicyMayo.isSelected()){
            btnSpicyMayo.setSelected(false);
        }
        //check if checkboxes for cookies are selected, if they are, set spinner values to 1, disable the spinners, and reset the checkbox
        if (btnChocoChunk.isSelected()){
            btnChocoChunk.setSelected(false);
            amountChocoChunk.setValue(1);
            amountChocoChunk.setEnabled(false);
        }if (btnDoubleChoco.isSelected()){
            btnDoubleChoco.setSelected(false);
            amountDoubleChoco.setValue(1);
            amountDoubleChoco.setEnabled(false);
        }if (btnOatmealRaisin.isSelected()){
            btnOatmealRaisin.setSelected(false);
            amountOatmealRaisin.setValue(1);
            amountOatmealRaisin.setEnabled(false);
        }if (btnPeanutButter.isSelected()){
            btnPeanutButter.setSelected(false);
            amountPeanutButter.setValue(1);
            amountPeanutButter.setEnabled(false);
        }
        
        //reset the spinner that holds the number of subs to 1
        numberOfSubs.setValue(1);
        
        //reset receipt to nothing
        receipt.setText("");
        
        //create default selection for all necessary things like bread type, size, and cheese type
        btnWhite.setSelected(rootPaneCheckingEnabled);
        btn6Inches.setSelected(rootPaneCheckingEnabled);
        btnCheeseWhite.setSelected(rootPaneCheckingEnabled);
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnChocoChunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChocoChunkActionPerformed
        //only enable spinner that takes in the value of cookies wanted for purchase if the checkbox corresponding to it is selected
        if (btnChocoChunk.isSelected()){
            amountChocoChunk.setEnabled(true);
        }else{
            amountChocoChunk.setEnabled(false);
        }
    }//GEN-LAST:event_btnChocoChunkActionPerformed

    private void btnDoubleChocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoubleChocoActionPerformed
        //only enable spinner that takes in the value of cookies wanted for purchase if the checkbox corresponding to it is selected
        if (btnDoubleChoco.isSelected()){
            amountDoubleChoco.setEnabled(true);
        }else{
            amountDoubleChoco.setEnabled(false);
        }
    }//GEN-LAST:event_btnDoubleChocoActionPerformed

    private void btnOatmealRaisinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOatmealRaisinActionPerformed
        //only enable spinner that takes in the value of cookies wanted for purchase if the checkbox corresponding to it is selected
        if (btnOatmealRaisin.isSelected()){
            amountOatmealRaisin.setEnabled(true);
        }else{
            amountOatmealRaisin.setEnabled(false);
        }
    }//GEN-LAST:event_btnOatmealRaisinActionPerformed

    private void btnPeanutButterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPeanutButterActionPerformed
        //only enable spinner that takes in the value of cookies wanted for purchase if the checkbox corresponding to it is selected
        if (btnPeanutButter.isSelected()){
            amountPeanutButter.setEnabled(true);
        }else{
            amountPeanutButter.setEnabled(false);
        }
    }//GEN-LAST:event_btnPeanutButterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DesaiIfAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DesaiIfAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DesaiIfAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DesaiIfAssignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DesaiIfAssignment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner amountChocoChunk;
    private javax.swing.JSpinner amountDoubleChoco;
    private javax.swing.JSpinner amountOatmealRaisin;
    private javax.swing.JSpinner amountPeanutButter;
    private javax.swing.ButtonGroup breadBtnGroup;
    private javax.swing.JRadioButton btn6Inches;
    private javax.swing.JCheckBox btnBBQ;
    private javax.swing.JCheckBox btnBOlives;
    private javax.swing.JCheckBox btnBacon;
    private javax.swing.JRadioButton btnBlueCheese;
    private javax.swing.JRadioButton btnCheeseWhite;
    private javax.swing.JCheckBox btnChicken;
    private javax.swing.JCheckBox btnChipotle;
    private javax.swing.JCheckBox btnChocoChunk;
    private javax.swing.JCheckBox btnDoubleChoco;
    private javax.swing.JRadioButton btnFootlong;
    private javax.swing.JRadioButton btnFreshCheddar;
    private javax.swing.JCheckBox btnGOlives;
    private javax.swing.JCheckBox btnGarlicAioli;
    private javax.swing.JRadioButton btnGluten;
    private javax.swing.JCheckBox btnGreenPepper;
    private javax.swing.JRadioButton btnHabaneroJack;
    private javax.swing.JCheckBox btnHam;
    private javax.swing.JCheckBox btnHoneyMustard;
    private javax.swing.JCheckBox btnHotSauce;
    private javax.swing.JRadioButton btnItalian;
    private javax.swing.JCheckBox btnJalapeno;
    private javax.swing.JCheckBox btnLettuce;
    private javax.swing.JCheckBox btnMayo;
    private javax.swing.JRadioButton btnMozzarella;
    private javax.swing.JCheckBox btnMustard;
    private javax.swing.JCheckBox btnOatmealRaisin;
    private javax.swing.JCheckBox btnOnion;
    private javax.swing.JButton btnOrder;
    private javax.swing.JCheckBox btnPeanutButter;
    private javax.swing.JRadioButton btnProcessedCheddar;
    private javax.swing.JCheckBox btnRanch;
    private javax.swing.JButton btnReset;
    private javax.swing.JCheckBox btnSpicyMayo;
    private javax.swing.JCheckBox btnSpinach;
    private javax.swing.JCheckBox btnSteak;
    private javax.swing.JCheckBox btnSweetOnion;
    private javax.swing.JCheckBox btnTomato;
    private javax.swing.JRadioButton btnWhite;
    private javax.swing.JRadioButton btnWholeWheat;
    private javax.swing.ButtonGroup cheeseBtnGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner numberOfSubs;
    private javax.swing.JTextArea receipt;
    private javax.swing.ButtonGroup sizeBtnGroup;
    // End of variables declaration//GEN-END:variables
}
